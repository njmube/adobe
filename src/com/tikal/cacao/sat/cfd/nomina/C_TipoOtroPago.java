//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.03.01 at 05:42:21 PM CST 
//


package com.tikal.cacao.sat.cfd.nomina;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>Java class for c_TipoOtroPago.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="c_TipoOtroPago">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;whiteSpace value="collapse"/>
 *     &lt;enumeration value="001"/>
 *     &lt;enumeration value="002"/>
 *     &lt;enumeration value="003"/>
 *     &lt;enumeration value="004"/>
 *     &lt;enumeration value="999"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "c_TipoOtroPago", namespace = "http://www.sat.gob.mx/sitio_internet/cfd/catalogos/Nomina")
@XmlEnum
public enum C_TipoOtroPago {

	/** 001 - Reintegro de ISR pagado en exceso (siempre que no haya sido enterado al SAT). */
    @XmlEnumValue("001")
    VALUE_1("001"),
    
    /** 002 - Subsidio para el empleo (efectivamente entregado al trabajador). */
    @XmlEnumValue("002")
    VALUE_2("002"),
    
    /** 003 - Vi&aacute;ticos (entregados al trabajador). */
    @XmlEnumValue("003")
    VALUE_3("003"),
    
    /** 004 - Aplicaci&oacute;n de saldo a favor por compensaci&oacute;n anual. */
    @XmlEnumValue("004")
    VALUE_4("004"),
    
    /** 999 - Pagos distintos a los listados y que no deben considerarse como ingreso por sueldos, salarios o ingresos asimilados. */
    @XmlEnumValue("999")
    VALUE_5("999");
    private final String value;

    C_TipoOtroPago(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static C_TipoOtroPago fromValue(String v) {
        for (C_TipoOtroPago c: C_TipoOtroPago.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
